Minimum Operations GFG


Given a number N. Find the number of operations required to reach N starting from 0. You have 2 operations available:

Double the number
Add one to the number

Example 1:

Input:
N = 8
Output: 4
Explanation: 0 + 1 = 1, 1 + 1 = 2,
2 * 2 = 4, 4 * 2 = 8

â€‹Example 2:

Input: 
N = 7
Output: 5
Explanation: 0 + 1 = 1, 1 + 1 = 2,
1 + 2 = 3, 3 * 2 = 6, 6 + 1 = 7



SOLUTION

class Solution
{
  public:
    int minOperation(int n)
    {
        int dp[n+1];
        dp[0]=0;
        dp[1]=1;
        if(n==0) return 0;
        if(n==1) return 1;
        
        for(int i=2;i<=n;i++)
        {
            if(i%2==0) dp[i]=min(dp[i/2]+1,dp[i-1]+1);
            else dp[i]=dp[i-1]+1;
        }
        return dp[n];
        //code here.
    }
};
