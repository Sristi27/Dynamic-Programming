Print the Longest Common Substring


#include<iostream>
using namespace std;

void lcs(string x,string y,int m,int n)
{
    int LCSuff[m+1][n+1]; 
    int len = 0;
    
    for (int i=0; i<=m; i++) 
    { 
        for (int j=0; j<=n; j++) 
        { 
            if (i == 0 || j == 0) 
                LCSuff[i][j] = 0; 
  
            else if (x[i-1] == y[j-1]) 
            { 
                LCSuff[i][j] = LCSuff[i-1][j-1] + 1; 
                if(LCSuff[i][j]>len)
                {
                  len=LCSuff[i][j];
                  row=i;
                  col=j;
            } 
            else LCSuff[i][j] = 0; 
        } 
    } 
    vector<char>result[len];
    while(LCSuff[row][col]!=0)
    { 
      result[--len]=x[row-1];
      row--;
      col--;
      }
      
      cout<<result;
    
}
int main()
 {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	int n,m;
	cin>>n>>m;
	string x,y;
	cin>>x>>y;
	
	lcs(x,y,n,m)<<endl;
	}
	
	
	return 0;
}
